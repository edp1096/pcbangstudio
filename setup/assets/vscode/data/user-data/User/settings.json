{
    "launcher.commands": [
        {
            "description": "NginX/PHP Start",
            "executable": "nginx_start.bat",
            "startIn": "%workspace%"
        },
        {
            "description": "NginX/PHP Start with XDebug - localhost:2480",
            "executable": "nginx_start_with_xdebug.bat",
            "startIn": "%workspace%"
        },
        {
            "description": "NginX/PHP Stop",
            "executable": "nginx_stop.bat",
            "startIn": "%workspace%"
        },
        {
            "description": " "
        },
        {
            "description": "PgSQL Start",
            "executable": "pg_ctl.exe",
            "parameters": "-D .\\pgdata -l pglog start",
            "startIn": "%workspace%",
        },
        {
            "description": "PgSQL Stop",
            "executable": "pg_ctl.exe",
            "parameters": "-D .\\pgdata stop",
            "startIn": "%workspace%",
        },
        {
            "description": "PgSQL Init db",
            "executable": "initdb.exe",
            "parameters": "-D .\\pgdata -U root -E UTF8 --no-locale",
            "startIn": "%workspace%"
        },
        {
            "description": "MariaDB Start",
            "executable": "mysqld.exe",
            "parameters": "--port=13306 --innodb-buffer-pool-size=48M --innodb_log_file_size=8M --character-set-server=utf8 --datadir=./mariadata",
            "startIn": "%workspace%"
        },
        {
            "description": "MariaDB Stop",
            "executable": "taskkill",
            "parameters": "/F /IM mysqld.exe > nul"
        },
        {
            "description": "MariaDB Init db",
            "executable": "xcopy",
            "parameters": "%MARIADB_ROOT%\\data_init\\* .\\mariadata\\ /S /E",
            "startIn": "%workspace%"
        },
        {
            "description": "   "
        },
        // {
        //     "description": "Go - build to workspace",
        //     "executable": "go_install.cmd",
        //     "parameters": "%workspace%",
        //     "startIn": "%item_path%",
        //     "output": true
        // },
        // {
        //     "description": "Install to workspace with vendor",
        //     "executable": "go_install_mod_vendor.cmd",
        //     "parameters": "%workspace%",
        //     "startIn": "%item_path%",
        //     "output": true
        // },
        {
            "description": "Go - mod init",
            "executable": "mod_init.cmd",
            "parameters": "%workspace%",
            "startIn": "%item_path%",
            "output": true
        },
        // {
        //     "description": "module tidy",
        //     "executable": "go",
        //     "parameters": "mod tidy",
        //     "startIn": "%item_path%",
        //     "output": true
        // },
        // {
        //     "description": "module tidy & create vendor",
        //     "executable": "mod_tidy.cmd",
        //     "parameters": "%workspace%",
        //     "startIn": "%item_path%",
        //     "output": true
        // },
        {
            "description": "Flush gocache & temp",
            "executable": "flush_gopath.cmd",
            "output": true
        },
        // {
        //     "description": "Go test && save test.log",
        //     "executable": "go",
        //     "parameters": "test ./... > test.log 2>&1",
        //     "startIn": "%workspace%",
        //     "output": false
        // },
        // {
        //     "description": "Go race && save race.log",
        //     "executable": "go",
        //     "parameters": "run -race ./... > race.log 2>&1",
        //     "startIn": "%workspace%",
        //     "output": false
        // },
        {
            "description": "    "
        },
        {
            "description": "HeidiSQL",
            "executable": "heidisql.exe",
            "startIn": "%workspace%"
        },
        {
            "description": "FileZilla",
            "executable": "filezilla_run.cmd",
            "startIn": "%workspace%"
        },
        {
            "description": "PuTTY",
            "executable": "putty.exe",
            "startIn": "%workspace%"
        },
    ],
    "settings.cycle": [
        // Change setting - Ctrl + j Ctrl + j
        {
            "id": "setWasmEnv",
            "overrideWorkspaceSettings": false,
            "values": [
                {
                    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",
                    "go.toolsEnvVars": {
                        "GOARCH": "amd64",
                        "GOOS": "windows",
                        "GOBIN": "${workspaceFolder}/bin"
                    }
                },
                {
                    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName} for Golang/WASM",
                    "go.toolsEnvVars": {
                        "GOARCH": "wasm",
                        "GOOS": "js",
                        "GOBIN": "${workspaceFolder}/bin"
                    }
                },
                {
                    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName} for Linux",
                    "go.toolsEnvVars": {
                        "GOARCH": "amd64",
                        "GOOS": "linux",
                        "GOBIN": "${workspaceFolder}/bin"
                    }
                }
            ]
        }
    ],
    // "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName} for Golang",
    "workbench.startupEditor": "none",
    "workbench.activityBar.visible": true,
    "editor.formatOnPaste": true,
    "editor.minimap.enabled": false,
    // Change Ctrl+Shift+T from CMD to Powershell
    "launcher.terminal": {
        "executable": "cmd.exe",
        "parameters": "/c start powershell -ExecutionPolicy Bypass -NoLogo -NoProfile -NoExit -Command set-alias ll dir; remove-item alias:curl; remove-item alias:wget; remove-item alias:cp; remove-item alias:mv; remove-item alias:rm; remove-item alias:rmdir; function prompt { $host.ui.rawui.WindowTitle = \"PS $pwd\";  $p = $(($pwd -split '\\\\')[-1] -join '\\') + '$ '; return $p }"
    },
    "terminal.integrated.profiles.windows": {
        "PowerShell -NoProfile": {
            "source": "PowerShell",
            "args": [
                "-NoProfile",
                "-ExecutionPolicy",
                "Bypass",
                "-NoLogo",
                "-NoProfile",
                "-NoExit",
                "-Command",
                "set-alias ll dir; remove-item alias:curl; remove-item alias:wget; remove-item alias:cp; remove-item alias:mv; remove-item alias:rm; remove-item alias:rmdir; function prompt { $host.ui.rawui.WindowTitle = \"PS $pwd\";  $p = $(($pwd -split '\\\\')[-1] -join '\\') + '$ '; if (-not (Test-Path env:GOENVADDED)) { Remove-Variable -name GOPATH; $env:GOBIN = \"$pwd\\bin\"; $env:GOENVADDED = \"exist\"; } return $p }"
            ]
        }
    },
    "terminal.integrated.defaultProfile.windows": "PowerShell -NoProfile",
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,
    "go.gotoSymbol.includeImports": true,
    "window.zoomLevel": -1,
    "editor.fontSize": 16.7,
    "editor.fontFamily": "D2Coding ligature, Consolas, 'Courier New', monospace",
    "workbench.sideBar.location": "right",
    "editor.fontLigatures": true,
    "breadcrumbs.enabled": true,
    "window.titleBarStyle": "custom",
    "files.autoSave": "afterDelay",
    "workbench.statusBar.visible": true,
    "workbench.settings.editor": "json",
    "explorer.confirmDragAndDrop": false,
    "vetur.format.defaultFormatter.js": "vscode-typescript",
    "vetur.format.defaultFormatter.html": "prettyhtml",
    "vetur.format.defaultFormatterOptions": {
        "js-beautify-html": {},
        "prettyhtml": {
            "printWidth": 120,
            "singleQuote": false
        }
    },
    /*
    PyLint ignoring set
    missing-docstring,
    no-member, 
    invalid-name(UPPER_CASE)
    */
    "python.linting.pylintArgs": [
        "--disable=C0111, E1101, C0103, E1129, W0702",
        "--max-line-length=120"
    ],
    "python.formatting.autopep8Args": [
        "--indent_size=4"
    ],
    "editor.minimap.side": "left",
    "go.toolsGopath": "${env:GOPATH}",
    "go.toolsEnvVars": {
        "GOARCH": "amd64",
        "GOOS": "windows",
        "GOBIN": "${workspaceFolder}/bin"
    },
    "go.useLanguageServer": true,
    "[go]": {
        "editor.snippetSuggestions": "none",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll": true,
        },
        "editor.defaultFormatter": "golang.go"
    },
    "files.eol": "\n",
    "gopls": {
        "usePlaceholders": true, // add parameter placeholders when completing a function
        "experimentalWorkspaceModule": true
    },
    "go.languageServerFlags": [],
    "go.docsTool": "gogetdoc",
    "go.formatTool": "goimports",
    "go.gocodeAutoBuild": true,
    "editor.minimap.maxColumn": 70,
    "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",
    "git.autofetch": true,
    "html.format.wrapLineLength": 1024,
    "php.suggest.basic": false,
    "intelephense.environment.shortOpenTag": true,
    "intelephense.format.enable": true,
    "intelephense.format.braces": "k&r",
    "workbench.iconTheme": "vscode-icons",
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.enableBell": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.inlineSuggest.enabled": true,
    "editor.suggestSelection": "first",
    "security.workspace.trust.enabled": false,
    "vsicons.dontShowNewVersionMessage": true
}
